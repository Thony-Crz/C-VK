name: CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

  jobs:
    ci:
      name: Build, Lint, Test
      runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: |
          if npm run | grep -qE "^\s*lint\s"; then
            npm run lint
          else
            echo "No lint script found, skipping."
          fi

      - name: Build
        run: |
          if npm run | grep -qE "^\s*build\s"; then
            npm run build
          else
            echo "No build script found, skipping."
          fi

      - name: Test
        env:
          CI: true
        run: |
          if npm run | grep -qE "^\s*test\s"; then
            npm test -- --ci --reporters=default
          else
            echo "No test script found, skipping."
          fi

      - name: Upload build artifact
        if: ${{ hashFiles('dist/**') != '' || hashFiles('build/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            dist
            build
          if-no-files-found: ignore
          retention-days: 7

  deploy:
    name: Deploy to Pages
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    concurrency:
      group: pages
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Detect project directory
        id: detect_dir
        run: |
          if [ -d frontEnd ]; then
            echo "WORKING_DIR=frontEnd" >> $GITHUB_ENV
          else
            echo "WORKING_DIR=." >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Build app
        run: npm run build
        working-directory: ${{ env.WORKING_DIR }}
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Determine site directory (dist or build)
        run: |
          if [ -d "${{ env.WORKING_DIR }}/dist" ]; then
            echo "SITE_DIR=${{ env.WORKING_DIR }}/dist" >> $GITHUB_ENV
          elif [ -d "${{ env.WORKING_DIR }}/build" ]; then
            echo "SITE_DIR=${{ env.WORKING_DIR }}/build" >> $GITHUB_ENV
          else
            echo "No dist/ or build/ directory found to deploy under ${{ env.WORKING_DIR }}" >&2
            ls -la "${{ env.WORKING_DIR }}"
            exit 1
          fi

      - name: Copy index.html to 404.html for SPA routing
        run: |
          if [ -f "${{ env.SITE_DIR }}/index.html" ]; then
            cp "${{ env.SITE_DIR }}/index.html" "${{ env.SITE_DIR }}/404.html"
          fi

      - name: Add .nojekyll to disable Jekyll
        run: |
          touch "${{ env.SITE_DIR }}/.nojekyll"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.SITE_DIR }}

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
